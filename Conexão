from pyspark.sql import SparkSession



# Caminho para o driver JDBC
jdbc_driver_path = "lib/postgresql-42.7.4.jar"

# Cria a sess√£o Spark com o driver JDBC
spark = SparkSession.builder \
    .appName("ConexaoPostgres") \
    .config("spark.jars", jdbc_driver_path) \
    .getOrCreate()

# Configura√ß√µes do banco de dados
db_url = "jdbc:postgresql://localhost:5432/empresa_exterior"
db_properties = {
    "user": "postgres",
    "password": "12345",
    "driver": "org.postgresql.Driver"
}

# Nome da tabela que deseja ler
tabela = "transacoes"

# L√™ os dados da tabela usando JDBC
df = spark.read.jdbc(url=db_url, table=tabela, properties=db_properties)

# Mostra os dados
df.show()

# Opcional: imprime o esquema (colunas e tipos)
df.printSchema()

# Finaliza a sess√£o
spark.stop()

# from pyspark.sql import SparkSession
# import os
#
# def iniciar_spark():
#     # Caminho absoluto para o driver JDBC PostgreSQL
#     caminho_jar = "C:/Users/Shirley/Downloads/postgresql-42.7.4.jar"
#
#     print("üîç Verificando se o driver JDBC existe no caminho informado...")
#     if not os.path.isfile(caminho_jar):
#         print(f"‚ùå Driver JDBC n√£o encontrado em: {caminho_jar}")
#         return None
#     else:
#         print(f"‚úÖ Driver JDBC localizado em: {caminho_jar}")
#
#     try:
#         print("üöÄ Iniciando SparkSession com o driver PostgreSQL...")
#         spark = SparkSession.builder \
#             .appName("StarComex_ETL") \
#             .config("spark.jars", caminho_jar) \
#             .config("spark.driver.extraClassPath", caminho_jar) \
#             .getOrCreate()
#
#         print("‚úÖ SparkSession criada com sucesso!")
#         return spark
#
#     except Exception as e:
#         print(f"‚ùå Erro ao iniciar SparkSession: {e}")
#         return None
#
# # Testa a fun√ß√£o se o arquivo for executado diretamente
# if __name__ == "__main__":
#     spark_teste = iniciar_spark()
#     if spark_teste:
#         print("üéâ Teste conclu√≠do: SparkSession est√° pronta para uso.")
#     else:
#         print("‚ö†Ô∏è Teste falhou: N√£o foi poss√≠vel iniciar a SparkSession.")

